---
##############################################################################################################################################
##  Date Created: June 8th, 2022
##  By: Aaron Arefe
##  This playbook was taken from the automatically generated playbook after an openscap scan created the '-arf.xml' file
##
##  The playbook below modify the /etc/pam.d/system-auth file to include the pwhistory.mo 
##  
##############################################################################################################################################

##############################################################################################################################################
## 
## This Section is sets up the playbook and vars
##
##############################################################################################################################################
-
  vars:
    var_password_pam_remember: !!str 5
    var_password_pam_remember_control_flag: !!str required
    var_password_pam_retry: !!str 3

  tasks:

  ##############################################################################################################################################
  ## 
  ## This Section is to configure the /etc/pam.d files to 'Limit Password Reuse'
  ##
  ##############################################################################################################################################

    - name: 'Limit Password Reuse: system-auth: Check for existing entry'
      lineinfile:
        path: /etc/pam.d/system-auth
        create: false
        regexp: ^password.*pam_pwhistory.so.*
        state: absent
      check_mode: true
      changed_when: false
      register: pam_pwhistory
      when: '"pam" in ansible_facts.packages'

    - name: 'Limit Password Reuse: system-auth'
      block:

        - name: 'Limit Password Reuse: system-auth - Ensure correct control value'
          pamd:
            name: system-auth
            type: password
            control: '{{ item }}'
            module_path: pam_pwhistory.so
            new_control: '{{ var_password_pam_remember_control_flag }}'
          loop:
            - required
            - optional
            - requisite
            - sufficient
            - binding

        - name: 'Limit Password Reuse: system-auth - Ensure remember argument in pam_pwhistory'
          pamd:
            name: system-auth
            type: password
            control: '{{ var_password_pam_remember_control_flag }}'
            module_path: pam_pwhistory.so
            module_arguments: use_authtok remember={{ var_password_pam_remember }}
            state: args_present
      when:
        - '"pam" in ansible_facts.packages'
        - pam_pwhistory.found == 1

    - name: 'Limit Password Reuse: system-auth - Add pam_pwhistory'
      pamd:
        name: system-auth
        type: password
        control: sufficient
        module_path: pam_unix.so
        new_type: password
        new_control: '{{ var_password_pam_remember_control_flag }}'
        new_module_path: pam_pwhistory.so
        module_arguments: use_authtok remember={{ var_password_pam_remember }}
        state: before
      when:
        - '"pam" in ansible_facts.packages'
        - pam_pwhistory.found == 0

  ##############################################################################################################################################
  ## 
  ## This Section configures /etc/pam.d/ files to 'Set Password Retry Prompts Permitted Per-Session'
  ##
  ##############################################################################################################################################

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Set Password Retry Prompts Permitted Per-Session - system-auth (change)
      replace:
        dest: '{{ item }}'
        regexp: (^.*\spam_pwquality.so\s.*retry\s*=\s*)(\S+)(.*$)
        replace: \g<1>{{ var_password_pam_retry }}\g<3>
      loop:
        - /etc/pam.d/system-auth
        - /etc/pam.d/password-auth
      when: '"pam" in ansible_facts.packages'

    - name: Set Password Retry Prompts Permitted Per-Session - system-auth (add)
      replace:
        dest: '{{ item }}'
        regexp: ^.*\spam_pwquality.so\s(?!.*retry\s*=\s*).*$
        replace: \g<0> retry={{ var_password_pam_retry }}
      loop:
        - /etc/pam.d/system-auth
        - /etc/pam.d/password-auth
      when: '"pam" in ansible_facts.packages'
