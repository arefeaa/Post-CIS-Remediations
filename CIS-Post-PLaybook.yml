##############################################################################################################################################
##  Date Created: June 7th, 2022
##  By: Aaron Arefe
##  This playbook was taken from the automatically generated playbook after an openscap scan created the '-arf.xml' file
##
##  The playbook below will call on other tasks in this playbook folder to:
##  --modify the mount points of /dev/shm/, /home, /tmp, & /var/tmp to include noexec, nosuid, nodev
##  --modify the /etc/pam.d/password-auth file to include pwhistory and pam_tally2/failllock modules
##  --modify the /etc/pam.d/system-auth file to include pwhistory and pam_tally2/failllock modules
##  --modify the /etc/system/journald.conf file
##  -- 
##  
##  
##############################################################################################################################################

##############################################################################################################################################
## 
## This Section is sets up the playbook and vars
## How to apply this Ansible Playbook:
##    $ ansible-playbook -i "localhost," -c local playbook.yml
##
##############################################################################################################################################


---
- 
  hosts: all 
  gather_facts: yes
  vars:
    var_sudo_logfile: !!str /var/log/sudo.log
    var_password_pam_remember: !!str 5
    var_password_pam_remember_control_flag: !!str required
    var_password_pam_minclass: !!str 4
    var_password_pam_retry: !!str 3
  tasks:

##############################################################################################################################################
## 
## This Section is used to modify the CIS-Benchmarks playbook 
## modify the /etc/modprobe.d/* files for usb-storage, cramfs, udf
## cli command we want to implement
## touch /etc/modprobe.d/usb-storage.conf
## echo `install usb-storage /bin/true` >> /etc/modprobe.d/usb-storage.conf
## touch /etc/modprobe.d/cramfs.conf
## echo 'install cramfs /bin/true` >> /etc/modprobe.d/cramfs.conf
## touch /etc/modprobe.d/udf.conf
## echo 'install udf /bin/true` >> /etc/modprobe.d/udf.conf
##
##############################################################################################################################################

    - name: Setup Modprobe to not install cramfs, usb-storage, & udf
      lineinfile:
        path: /etc/modprobe.d/{{ item }}.conf
        line: install {{ item }} /bin/true
        create: yes
      with_item:
        - cramfs
        - usb-storage
        - udf

##############################################################################################################################################
## 
## This Section is used to modify the /etc/sysconfig/chronyd file and add the option
## /etc/sysconfig/chronyd .... OPTIONS="-u chrony"
##
##############################################################################################################################################
    - name: Modify chronyd file with -u chrony line
      lineinfile:
        path: /etc/sysconfig/chronyd
        regexp: '^OPTIONS='
        line: OPTIONS="-u chrony"

##############################################################################################################################################
## 
## This Section is used to remove the file: 
## rm /etc/cron.deny
##
##############################################################################################################################################

    - name: Remove /etc/cron.deny
      file:
        path: /etc/cron.deny
        state: absent

##############################################################################################################################################
## 
## This Section is used to remove the file: 
## /etc/systemd/journald.conf
## ForwardToSyslog=yes, Compress=yes, Storage=persistent
## systemctl restart systemd-journald.service
##
##############################################################################################################################################

    - name: Setting shell-quoted shell-style assignment of 'ForwardToSyslog' to 'yes'
        in '/etc/systemd/journald.conf'
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/systemd/journald.conf
            create: false
            regexp: ^\s*ForwardToSyslog=
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/systemd/journald.conf
          lineinfile:
            path: /etc/systemd/journald.conf
            create: false
            regexp: ^\s*ForwardToSyslog=
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/systemd/journald.conf
          lineinfile:
            path: /etc/systemd/journald.conf
            create: true
            regexp: ^\s*ForwardToSyslog=
            line: ForwardToSyslog="yes"
            state: present
            insertbefore: ^# ForwardToSyslog
            validate: /usr/bin/bash -n %s

    - name: systemctl restart systemd-journald.service
      ansible.builtin.systemd:
        state: restarted
        daemon_reload: yes
        name: systemd-journald

##############################################################################################################################################
##
##  Modify the /etc/suders file to log sudo usage in /var/log/sudo and set it up to use pty
##  touch /var/log/sudo.log
##  visudo
##  Defaults use_pty
##  Defaults logfile="/var/log/sudo.log"
##
##############################################################################################################################################

    - name: Ensure logfile is enabled with the appropriate value in /etc/sudoers
      lineinfile:
        path: /etc/sudoers
        regexp: ^[\s]*Defaults\s(.*)\blogfile=[-]?\w+\b(.*)$
        line: Defaults \1logfile={{ var_sudo_logfile }}\2
        validate: /usr/sbin/visudo -cf %s
        backrefs: true
      register: edit_sudoers_logfile_option

    - name: Enable logfile option with appropriate value in /etc/sudoers
      lineinfile:
        path: /etc/sudoers
        line: Defaults logfile={{ var_sudo_logfile }}
        validate: /usr/sbin/visudo -cf %s
      when: edit_sudoers_logfile_option is defined and not edit_sudoers_logfile_option.changed

    - name: Enable logfile option with appropriate value in /etc/sudoers
      lineinfile:
        path: /etc/sudoers
        line: Defaults use_pty
        validate: /usr/sbin/visudo -cf %s
      when: edit_sudoers_logfile_option is defined and not edit_sudoers_logfile_option.changed

##############################################################################################################################################
##
##  Sets the minclass value to 4 in /etc/security/pwquality.conf 
##  minclass = 4
##
##############################################################################################################################################

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure PAM variable minclass is set accordingly
      lineinfile:
        create: true
        dest: /etc/security/pwquality.conf
        regexp: ^#?\s*minclass
        line: minclass = {{ var_password_pam_minclass }}
      when: '"pam" in ansible_facts.packages'

##############################################################################################################################################
##    permissions of /etc/ssh/ssh_host_*_key.pub
##    chown root:root
##    chmod u-x,go-rwx
##############################################################################################################################################
    - name: edit the permissions on /etc/ssh/ssh_host_*_key.pub 
      shell: find /etc/ssh -xdev -type f -name 'ssh_host_*_key' -exec chown root:root {} \; && find /etc/ssh -xdev -type f -name 'ssh_host_*_key' -exec chmod u-x,go-rwx {} \; && find /var/log -type f -exec chmod g-wx,o-rwx "{}" +

##############################################################################################################################################
##    /etc/ssh/sshd_config
##    Strong Ciphers, MAC, KexAlgorithms
##
##############################################################################################################################################

    - name: Configure /etc/ssh/sshd_config to have Strong Ciphers, MACs, and KexAlgorithms
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^Ciphers'
        line: Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr

    - name: Configure /etc/ssh/sshd_config to have Strong Ciphers, MACs, and KexAlgorithms
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^MACs'
        line: MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512,hmac-sha2-256

    - name: Configure /etc/ssh/sshd_config to have Strong Ciphers, MACs, and KexAlgorithms
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^KexAlgorithms'
        line: KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie-hellman-group-exchange-sha256
##############################################################################################################################################
##    /var/log/ -type f
##    chmod g-wx,o-rwx
##############################################################################################################################################

    - name: find files in /var/log and make sure the permissions are set to chmod g-wx,o-rwx
      shell: find /var/log/ -type f -exec chmod g-wx,o-rwx {} \;


##############################################################################################################################################
##
##  The playbook below will call on other tasks in this playbook folder to:
##  --modify the mount points of /dev/shm/, /home, /tmp, & /var/tmp to include noexec, nosuid, nodev
##  --modify the /etc/pam.d/password-auth file to include pwhistory and pam_tally2/failllock modules
##  --modify the /etc/pam.d/system-auth file to include pwhistory and pam_tally2/failllock modules
##  --modify the /etc/system/journald.conf file
##   
##   cp /etc/pam.d/system-auth /etc/pam.d/system-auth-ac.ORIG && cp /etc/pam.d/password-auth /etc/pam.d/password-auth-ac.ORIG
##############################################################################################################################################

- import_playbook: 
    - Mount-Modifiers.yml
    - CoreDump.yml
    - password-auth.yml
    - system-auth.yml
    - Umask-Settings.yml
- import_playbook: faillock.yml
  when: 
    - '{{ ansible_distribution_file_variety }} == "RedHat"'
    - '{{ ansible_distribution_major_version }} == "8"'
- import_playbook: pam_tally2.yml
  when: 
    - '{{ ansible_distribution_file_variety }} == "RedHat"'
    - '{{ ansible_distribution_major_version }} == "7"'