---
##############################################################################################################################################
##  Date Created: June 8th, 2022
##  By: Aaron Arefe
##  This playbook was taken from the automatically generated playbook after an openscap scan created the '-arf.xml' file
##
##  The playbook below will call on other tasks in this playbook folder to:
##  --modify the mount points of /dev/shm/, /home, /tmp, & /var/tmp to include noexec, nosuid, nodev
##  --modify the /etc/pam.d/password-auth file to include pwhistory 
##  --modify the /etc/pam.d/system-auth file to include pwhistory 
##  --modify the /etc/system/journald.conf file
##  -- 
##  
##  
##############################################################################################################################################

##############################################################################################################################################
## 
## This Section is sets up the playbook and vars
## How to apply this Ansible Playbook:
##    $ ansible-playbook -i "localhost," -c local playbook.yml
##
##############################################################################################################################################

vars:
  var_password_pam_remember: !!str 5
  var_password_pam_remember_control_flag: !!str required
  var_password_pam_retry: !!str 3

gather_facts: yes

tasks:
    - package_facts:
        manager: auto
      name: Gather the package facts
      
##############################################################################################################################################
## 
## This Section is to configure the /etc/pam.d files to 'Limit Password Reuse'
##
##############################################################################################################################################

    - name: 'Limit Password Reuse: password-auth: Check for existing entry'
      lineinfile:
        path: /etc/pam.d/password-auth
        create: false
        regexp: ^password.*pam_pwhistory.so.*
        state: absent
      check_mode: true
      changed_when: false
      register: pam_pwhistory
      when: '"pam" in ansible_facts.packages'

    - name: 'Limit Password Reuse: password-auth'
      block:

        - name: 'Limit Password Reuse: password-auth - Ensure correct control value'
          pamd:
            name: password-auth
            type: password
            control: '{{ item }}'
            module_path: pam_pwhistory.so
            new_control: '{{ var_password_pam_remember_control_flag }}'
          loop:
            - required
            - optional
            - requisite
            - sufficient
            - binding

        - name: 'Limit Password Reuse: password-auth - Ensure remember argument in pam_pwhistory'
          pamd:
            name: password-auth
            type: password
            control: '{{ var_password_pam_remember_control_flag }}'
            module_path: pam_pwhistory.so
            module_arguments: use_authtok remember={{ var_password_pam_remember }}
            state: args_present
      when:
        - '"pam" in ansible_facts.packages'
        - pam_pwhistory.found == 1


    - name: 'Limit Password Reuse: password-auth - Add pam_pwhistory'
      pamd:
        name: password-auth
        type: password
        control: sufficient
        module_path: pam_unix.so
        new_type: password
        new_control: '{{ var_password_pam_remember_control_flag }}'
        new_module_path: pam_pwhistory.so
        module_arguments: use_authtok remember={{ var_password_pam_remember }}
        state: before
      when:
        - '"pam" in ansible_facts.packages'
        - pam_pwhistory.found == 0



